{"version":3,"sources":["components/GeneralInfo.js","components/GeneralForm.js","App.js","index.js"],"names":["GeneralInfo","props","editIcon","icon","faEdit","fullName","address","email","phone","school","degree","gradYear","company","positionTitle","responsibilities","dates","editEvent","className","id","onClick","GeneralForm","handleChange","event","name","target","value","setState","onSubmitItems","preventDefault","showGeneralInfo","onEditItem","state","bind","onSubmit","this","style","display","htmlFor","onChange","type","onEditItems","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0736145.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/GeneralInfo.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nconst GeneralInfo = (props) => {\n\n  const editIcon = <FontAwesomeIcon icon = {faEdit} />\n\n  const { \n    fullName, \n    address, \n    email, \n    phone, \n    school, \n    degree, \n    gradYear, \n    company, \n    positionTitle, \n    responsibilities, \n    dates, \n    editEvent,\n  } = props;\n\n  \n  return (\n\n    <div>\n        <ul>\n          <h2 className = 'general'>{fullName}</h2>\n          <li className = 'general'>{address}</li>\n          <li className = 'general'>{email}</li>\n          <li className = 'general' id = 'phone'>{phone}</li>\n          <h3 className = 'education'>{school}</h3>\n          <li className = 'education'>{degree}</li>\n          <li className = 'education'>{gradYear}</li>\n          <h3 className = 'employment'>{company}</h3>\n          <li className = 'employment'>{positionTitle}</li>\n          <li className = 'employment'>{responsibilities}</li>\n          <li className = 'employment'>{dates}</li>\n          <button onClick = {editEvent}>{editIcon}</button>\n          <span></span>\n        </ul>\n      </div>\n  );\n}\n\nexport default GeneralInfo;","import React, { Component } from 'react';\nimport GeneralInfo from './GeneralInfo';\nimport '../styles/GeneralForm.css';\n\nclass GeneralForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.setState(state => ({ showGeneralInfo: !state.showGeneralInfo }));\n\n    this.state = {\n        fullName: '',\n        email: '',\n        phone: '',\n        address: '',\n        school: '',\n        degree: '',\n        gradYear: '',\n        company: '',\n        positionTitle: '',\n        responsibilities: '',\n        dates: '', \n        showGeneralInfo: false,\n      }\n\n    this.handleChange = this.handleChange.bind(this) \n    this.onSubmitItems = this.onSubmitItems.bind(this) \n  }\n\n  handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]:value\n    });\n  }\n\n  onSubmitItems = (event) => {\n    event.preventDefault();\n    this.setState({\n      showGeneralInfo: true,\n    })\n  };\n\n  onEditItem = (event) => {\n    event.preventDefault();\n    this.setState({\n      showGeneralInfo: false,\n      fullName: this.state.fullName.value,\n    })\n  };\n\n  render() {\n    return (\n      <div>\n\n         <form \n         onSubmit = {this.onSubmitItems} \n         style = {{display: this.state.showGeneralInfo ? 'none': 'block'}}>\n\n          <label htmlFor = 'nameInput'>Name </label>\n          <input \n            onChange = {this.handleChange}\n            name = 'fullName'\n            value = {this.state.fullName}\n            type = 'text' \n            id = 'nameInput' />\n          <br></br>\n\n          <label htmlFor = 'emailInput'>Email </label>\n            <input \n            onChange = {this.handleChange}\n            value = {this.state.email}\n            name = 'email'\n            type = 'text' \n            id = 'emailInput' />\n          <br></br>\n\n          <label htmlFor = 'phoneInput'>Phone Number </label>\n          <input \n            onChange = {this.handleChange}\n            value = {this.state.phone}\n            name = 'phone'\n            type = 'number' \n            id = 'phoneInput' />\n          <br></br>\n\n          <label htmlFor = 'addressInput'>Address </label>\n          <input \n            onChange = {this.handleChange}\n            value = {this.state.address}\n            name = 'address'\n            type = 'text' \n            id = 'addressInput' />\n          <br></br>\n\n          <label htmlFor = 'schoolInput'>School </label>\n          <input \n            onChange = {this.handleChange}\n            name = 'school'\n            value = {this.state.school}\n            type = 'text' \n            id = 'schoolInput' />\n          <br></br>\n\n          <label htmlFor = 'degreeInput'>Degree </label>\n            <input \n            onChange = {this.handleChange}\n            value = {this.state.degree}\n            name = 'degree'\n            type = 'text' \n            id = 'degreeInput' />\n          <br></br>\n\n          <label htmlFor = 'gradYearInput'>Graduation Year </label>\n          <input \n            onChange = {this.handleChange}\n            value = {this.state.gradYear}\n            name = 'gradYear'\n            type = 'number' \n            id = 'gradYearInput' />\n          <br></br>\n\n          <label htmlFor = 'companyInput'>Company </label>\n          <input \n            onChange = {this.handleChange}\n            name = 'company'\n            value = {this.state.company}\n            type = 'text' \n            id = 'companyInput' />\n          <br></br>\n\n          <label htmlFor = 'positionInput'>Position Title </label>\n            <input \n            onChange = {this.handleChange}\n            value = {this.state.positionTitle}\n            name = 'positionTitle'\n            type = 'text' \n            id = 'positionInput' />\n          <br></br>\n\n          <label htmlFor = 'responsibilitiesInput'>Job Responsibilities </label>\n          <input \n            onChange = {this.handleChange}\n            value = {this.state.responsibilities}\n            name = 'responsibilities'\n            type = 'text' \n            id = 'responsibilitiesInput' />\n          <br></br>\n\n          <label htmlFor = 'datesInput'>Dates of Employment </label>\n          <input \n            onChange = {this.handleChange}\n            value = {this.state.dates}\n            name = 'dates'\n            type = 'text' \n            id = 'datesInput' />\n          <br></br>\n\n          <button \n            type = 'submit' \n            value = 'Submit'\n          >Submit</button>\n\n        </form>\n\n        <form \n            onSubmit = {this.onEditItems} \n            style = {{display: this.state.showGeneralInfo ? 'block': 'none'}}\n          >\n            <GeneralInfo\n              fullName = {this.state.fullName} \n              email = {this.state.email}\n              phone = {this.state.phone}\n              address = {this.state.address}\n              school = {this.state.school} \n              degree = {this.state.degree}\n              gradYear = {this.state.gradYear}\n              company = {this.state.company} \n              positionTitle = {this.state.positionTitle}\n              responsibilities = {this.state.responsibilities}\n              dates = {this.state.dates}\n              showGeneralInfo = {this.state.showGeneralInfo}\n              editEvent = {this.onEditItem.bind(this)}\n            />\n        </form>\n      </div>\n    );\n  };\n}\n\nexport default GeneralForm;","import React, { Component } from 'react';\nimport GeneralForm from './components/GeneralForm';\nimport './styles/App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <h1>Create Your CV</h1>  \n        <div>\n          <GeneralForm\n          />\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}